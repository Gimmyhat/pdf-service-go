apiVersion: v1
kind: ConfigMap
metadata:
  name: nas-pdf-service-postgres-config
  namespace: print-serv
data:
  POSTGRES_DB: pdf_service
  POSTGRES_USER: pdf_service
  POSTGRES_PASSWORD: pdf_service_pass
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nas-pdf-service-postgres-init
  namespace: print-serv
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS request_logs (
      id SERIAL PRIMARY KEY,
      timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
      path TEXT NOT NULL,
      method TEXT NOT NULL,
      duration_ns BIGINT NOT NULL,
      success BOOLEAN NOT NULL
    );

    CREATE TABLE IF NOT EXISTS docx_logs (
      id SERIAL PRIMARY KEY,
      timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
      duration_ns BIGINT NOT NULL,
      has_error BOOLEAN NOT NULL
    );

    CREATE TABLE IF NOT EXISTS gotenberg_logs (
      id SERIAL PRIMARY KEY,
      timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
      duration_ns BIGINT NOT NULL,
      has_error BOOLEAN NOT NULL
    );

    CREATE TABLE IF NOT EXISTS pdf_logs (
      id SERIAL PRIMARY KEY,
      timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
      size_bytes BIGINT NOT NULL
    );

    CREATE INDEX IF NOT EXISTS idx_request_logs_timestamp ON request_logs(timestamp);
    CREATE INDEX IF NOT EXISTS idx_docx_logs_timestamp ON docx_logs(timestamp);
    CREATE INDEX IF NOT EXISTS idx_gotenberg_logs_timestamp ON gotenberg_logs(timestamp);
    CREATE INDEX IF NOT EXISTS idx_pdf_logs_timestamp ON pdf_logs(timestamp);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nas-pdf-service-postgres-pvc
  namespace: print-serv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nas-pdf-service-postgres
  namespace: print-serv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nas-pdf-service-postgres
  template:
    metadata:
      labels:
        app: nas-pdf-service-postgres
    spec:
      containers:
      - name: nas-pdf-service-postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: nas-pdf-service-postgres-config
        env:
        - name: POSTGRES_MAX_CONNECTIONS
          value: "500"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: nas-pdf-service-postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: nas-pdf-service-postgres-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "pdf_service"]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "pdf_service"]
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: nas-pdf-service-postgres-storage
        persistentVolumeClaim:
          claimName: nas-pdf-service-postgres-pvc
      - name: nas-pdf-service-postgres-init
        configMap:
          name: nas-pdf-service-postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: nas-pdf-service-postgres
  namespace: print-serv
spec:
  selector:
    app: nas-pdf-service-postgres
  ports:
  - port: 5432
    targetPort: 5432 