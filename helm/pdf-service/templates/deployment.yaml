apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pdf-service.fullname" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "pdf-service.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "pdf-service.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "pdf-service.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
        # Внешняя БД: берём настройки из существующего ConfigMap
        envFrom:
        - configMapRef:
            name: nas-pdf-service-postgres-config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MAX_CONCURRENT_REQUESTS
          value: {{ .Values.app.maxConcurrentRequests | quote }}
        - name: DOCX_TEMPLATE_CACHE_TTL
          value: {{ .Values.app.docxTemplate.cacheTTL }}
        - name: DOCX_CIRCUIT_BREAKER_FAILURE_THRESHOLD
          value: {{ .Values.app.circuitBreaker.docx.failureThreshold | quote }}
        - name: DOCX_CIRCUIT_BREAKER_RESET_TIMEOUT
          value: {{ .Values.app.circuitBreaker.docx.resetTimeout }}
        - name: DOCX_CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS
          value: {{ .Values.app.circuitBreaker.docx.halfOpenMaxCalls | quote }}
        - name: DOCX_CIRCUIT_BREAKER_SUCCESS_THRESHOLD
          value: {{ .Values.app.circuitBreaker.docx.successThreshold | quote }}
        - name: GOTENBERG_URL
          value: {{ .Values.gotenberg.url | quote }}
        - name: CIRCUIT_BREAKER_FAILURE_THRESHOLD
          value: {{ .Values.app.circuitBreaker.gotenberg.failureThreshold | quote }}
        - name: CIRCUIT_BREAKER_RESET_TIMEOUT
          value: {{ .Values.app.circuitBreaker.gotenberg.resetTimeout }}
        - name: CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS
          value: {{ .Values.app.circuitBreaker.gotenberg.halfOpenMaxCalls | quote }}
        - name: CIRCUIT_BREAKER_SUCCESS_THRESHOLD
          value: {{ .Values.app.circuitBreaker.gotenberg.successThreshold | quote }}
        - name: DOCX_RETRY_MAX_ATTEMPTS
          value: {{ .Values.app.retry.docx.maxAttempts | quote }}
        - name: DOCX_RETRY_INITIAL_DELAY
          value: {{ .Values.app.retry.docx.initialDelay }}
        - name: DOCX_RETRY_MAX_DELAY
          value: {{ .Values.app.retry.docx.maxDelay }}
        - name: DOCX_RETRY_BACKOFF_FACTOR
          value: {{ .Values.app.retry.docx.backoffFactor | quote }}
        - name: GOTENBERG_RETRY_MAX_ATTEMPTS
          value: {{ .Values.app.retry.gotenberg.maxAttempts | quote }}
        - name: GOTENBERG_RETRY_INITIAL_DELAY
          value: {{ .Values.app.retry.gotenberg.initialDelay }}
        - name: GOTENBERG_RETRY_MAX_DELAY
          value: {{ .Values.app.retry.gotenberg.maxDelay }}
        - name: GOTENBERG_RETRY_BACKOFF_FACTOR
          value: {{ .Values.app.retry.gotenberg.backoffFactor | quote }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 12 }}
        volumeMounts:
        - name: tmp-storage
          mountPath: /tmp
        - name: stats-storage
          mountPath: /app/data
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      # Шаблоны используем встроенные из образа; ConfigMap не монтируем
      - name: tmp-storage
        emptyDir:
          sizeLimit: {{ .Values.storage.tmp.sizeLimit }}
      - name: stats-storage
        persistentVolumeClaim:
          claimName: {{ include "pdf-service.fullname" . }}-stats-pvc 