name: Build and Deploy

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  DOCKER_IMAGE: gimmyhat/pdf-service-go
  K8S_NAMESPACE: print-serv
  NEW_VERSION: ${{ github.event.head_commit.timestamp }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -v ./...

      - name: Run linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          golangci-lint run

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.NEW_VERSION }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Save version
        run: echo "${{ env.NEW_VERSION }}" > current_version.txt

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          # Применяем конфигурации
          kubectl apply -f k8s/nas-pdf-service-configmap.yaml
          kubectl apply -f k8s/nas-pdf-service-templates-configmap.yaml
          kubectl apply -f k8s/nas-pdf-service-gotenberg-deployment.yaml
          kubectl apply -f k8s/pdf-service-deployment.yaml
          kubectl apply -f k8s/nas-pdf-service-hpa.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/pdf-service -n ${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/gotenberg -n ${{ env.K8S_NAMESPACE }} 